#!/bin/sh
#
# FanoutPlusPlus Fanout server in C++
#
# chkconfig: - 40 60  
# description: Fanout server written in C++
# config: /etc/sysconfig/FanoutPlusPlus


### BEGIN INIT INFO
# Provides: FanoutPlusPlus
# Required-Start: $network $named
# Required-Stop: $network $named
# Short-Description: Fanout server written in C++
# Description: Fanout server written in C++
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

exec="/usr/local/bin/FanoutPlusPlus"
prog="FanoutPlusPlus"

[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

lockfile=/var/lock/subsys/$prog

start() {
    [ -x $exec ] || exit 5
    echo -n $"Starting $prog: "
    daemon --user FanoutPlusPlus $exec $OPTIONS
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    killproc $prog
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    status $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 
{start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
